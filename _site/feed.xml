<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lustiges Krisenblog</title>
    <description>Spielplatz zum Design (und Jekyll) ausprobieren eventuell auch mal Content zu publizieren
</description>
    <link>http://www.gestos.de/</link>
    <atom:link href="http://www.gestos.de/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 23 Nov 2015 20:28:25 +0100</pubDate>
    <lastBuildDate>Mon, 23 Nov 2015 20:28:25 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>a better vimrc</title>
        <description>&lt;h2 id=&quot;using-vims-internal-file-explorer&quot;&gt;Using vim’s internal file explorer&lt;/h2&gt;

&lt;p&gt;I’ve seen this on &lt;a href=&quot;https://medium.com/@mozhuuuuu/vimmers-you-dont-need-nerdtree-18f627b561c3&quot;&gt;this&lt;/a&gt; blogpost while looking up some proper keybindings for the NERDtree plugin.&lt;br /&gt;
Since I really don’t need anything more than just a simple filebrowser that can be toggled into view, this fits all my needs.  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;activate the Explorer by type :E in command mode  &lt;/li&gt;
  &lt;li&gt;type “i” for changing list style or just put &lt;em&gt;let g:netrw_liststyle=3&lt;/em&gt; in your .vimrc  &lt;/li&gt;
  &lt;li&gt;hitting enter on a file will open it in a new buffer (nerdtree seems to open files in new tabs)  &lt;/li&gt;
  &lt;li&gt;if you just want to leave the explorer view, simply go to the next buffer  &lt;/li&gt;
  &lt;li&gt;I’ve mapped &lt;em&gt;:E&lt;/em&gt; to &lt;em&gt;&amp;lt;ctrl-e&amp;gt;&lt;/em&gt; in my .vimrc, although that is only slightly, if at all, more convenient &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 23 Nov 2015 11:50:07 +0100</pubDate>
        <link>http://www.gestos.de/2015/11/23/a-better-vimrc.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/11/23/a-better-vimrc.html</guid>
        
        
      </item>
    
      <item>
        <title>a</title>
        <description>
</description>
        <pubDate>Mon, 23 Nov 2015 11:49:00 +0100</pubDate>
        <link>http://www.gestos.de/2015/11/23/a.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/11/23/a.html</guid>
        
        
      </item>
    
      <item>
        <title>Verzeichnisstruktur Jekyll</title>
        <description>&lt;p&gt;Die Locations für verschiedene links in der hinterher erstellten index.html:
Der Default-Template für den &amp;lt;head&amp;gt; Abschnitt verweist standardmäßig auf /css/main.css
Was ich also in _sass/_layout.scss hineinschreibe, wird hinterher in _site/css/main.css vorhanden sein.
Bilder, die auf der geladenen Seite z.b. in pix/bild.jpg verlinkt sind, kommen mit dem verzeichnis (pix) oder ohne in das css verzeichnis.
nach dem build sind sie dann nach _site/css/(pix)/bild.jpg kopiert.&lt;br /&gt;
Der { content } tag rendert dann anscheinend aus allen .md Dateien, die im _posts ordner liegen, nach irgendeiner Vorlage  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a: eine eigene Seite (die den normalen css enthält, gibts sicher auch noch templates für  &lt;/li&gt;
  &lt;li&gt;b: ein Exzerpt, das mit Datum und Titel an die Stelle, wo { content } eingefügt wurde, gerendert wird&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ausserdem nutzt der Standardtemplate anscheinend &amp;lt;h1&amp;gt; tags für die Seitentitel. Das ist natürlich nicht so gut, der Tag sollte ja dem Blogtitel vorbehalten sein&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Nov 2015 13:10:59 +0100</pubDate>
        <link>http://www.gestos.de/jekyll/update/2015/11/22/where.html</link>
        <guid isPermaLink="true">http://www.gestos.de/jekyll/update/2015/11/22/where.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 21 Nov 2015 08:52:59 +0100</pubDate>
        <link>http://www.gestos.de/jekyll/update/2015/11/21/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://www.gestos.de/jekyll/update/2015/11/21/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Mozilla Dekstop Download Directories</title>
        <description>&lt;p&gt;If you use Firefox or Iceweasel as I do, you may wonder about the “Desktop” and “Download” directories it creates every time you save anything to disk, even if you explicitly set ff to ask you where to save your stuff.
This can be prevented by creating a ~/.config/user-dirs.dirs file, either with or without real content.
This is according to http://www.kariliq.nl/misc/firefox-dirs.html and also this old arch forum post: https://bbs.archlinux.org/viewtopic.php?pid=997084#p997084&lt;/p&gt;
</description>
        <pubDate>Sat, 16 May 2015 01:17:19 +0200</pubDate>
        <link>http://www.gestos.de/2015/05/16/mozilla-dekstop-download-directories.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/05/16/mozilla-dekstop-download-directories.html</guid>
        
        
      </item>
    
      <item>
        <title>adjust cursor color for vim and urxvt</title>
        <description>&lt;p&gt;Whenever I used a dark colour scheme for vim (like the excellent &lt;a href=&quot;https://github.com/gregsexton/Muon&quot;&gt;muon&lt;/a&gt; or &lt;a href=&quot;https://github.com/larssmit/vim-getafe/tree/master/colors&quot;&gt;getafe&lt;/a&gt;), I found myself lost beacuse the usually black cursor of my urxvt wouldnt adjust to the dark colour theme. I found that this cant be tweaked in vim, but one can change the color of the urxvt terminal; so, for my needs, 
URxvt&lt;em&gt;cursorColor:  #D6C0FB
URxvt&lt;/em&gt;cursorBlink:  on
does the job pretty satisfyingly :-)
(for reloading the Xresources, use xrdb -load .Xresources. put the same command into ~/.xinitrc to have it loaded on X startup)&lt;/p&gt;
</description>
        <pubDate>Thu, 07 May 2015 21:39:59 +0200</pubDate>
        <link>http://www.gestos.de/2015/05/07/adjust-cursor-color-for-vim-and-urxvt.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/05/07/adjust-cursor-color-for-vim-and-urxvt.html</guid>
        
        
      </item>
    
      <item>
        <title>css completion in vim</title>
        <description>&lt;p&gt;Turning on completion for css items (like e.g. bluefish has and I was missing it severely in vim) is actually pretty &lt;em&gt;easy&lt;/em&gt;!
only :set omnifunc=csscomplete#CompleteCSS and the ctrl-x+ctrl-o will give the possible completions! &lt;/p&gt;

&lt;p&gt;see:
https://docs.oseems.com/general/application/vim/auto-complete-css
http://vim.wikia.com/wiki/Omni_completion&lt;/p&gt;

&lt;p&gt;the first one explains it very nicely and has a screenshot, too :-)&lt;/p&gt;
</description>
        <pubDate>Mon, 04 May 2015 14:39:37 +0200</pubDate>
        <link>http://www.gestos.de/2015/05/04/css-completion-in-vim.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/05/04/css-completion-in-vim.html</guid>
        
        
      </item>
    
      <item>
        <title>vim tabs</title>
        <description>&lt;p&gt;As I’m using vim inside urxvt and screen, it seems close to impossible to map the Ctrl-PgUp/Dn or Ctrl-Tab keybindings for tab-switching. So I was looking for another way. 
Possible solutions: 
a) just use gt or gT in command mode; 
b) work with buffers instead of tabs. There’s a very interesting article here https://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/ that lead me to my, now, favourite solution
c) I like using tabs the wrong way I guess, but the article told me about the “leader” key, which can be defined in the vimrc. That still requires being in command mode, unfortunately, but it’s still pretty quick compared to :tabnext or even :&lt;up&gt;. 
I mapped the leader key to the spacebar like &lt;code&gt;let mapleader = &quot; &quot;&lt;/code&gt; and then gave the tabnext shortcut with &lt;code&gt;nmap &lt;leader&gt;&lt;space&gt; :tabnext&lt;cr&gt;&amp;lt;/code&amp;gt;
that&#39;s a nice way to cycle through multiple tabs, I guess&lt;/cr&gt;&lt;/space&gt;&lt;/leader&gt;&lt;/code&gt;&lt;/up&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 04 May 2015 03:26:52 +0200</pubDate>
        <link>http://www.gestos.de/2015/05/04/vim-tabs.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/05/04/vim-tabs.html</guid>
        
        
      </item>
    
      <item>
        <title>ntree</title>
        <description>&lt;p&gt;If you ever felt the need for a small file browser within vim, check out the Nerdtree plugin.
You can find it here:
https://github.com/scrooloose/nerdtree
and theres an installation instruction using pathogen, which I followed and worked for me.
Once you call it from inside vim via :NERDTree it will open on the left hand side and is pretty straightforward if you scan the help (press “?”) section for some seconds. Great stuff! &lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 20:25:27 +0200</pubDate>
        <link>http://www.gestos.de/2015/05/03/ntree.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/05/03/ntree.html</guid>
        
        
      </item>
    
      <item>
        <title>apache process spawning</title>
        <description>&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Having had apache running for some hours, I came to notice that there were 5 or more processes, each having several thread, I wondered why this heavy spawning of processes occured. There are several files that can influence apaches behaviour, namely: apache2.conf - keepalive (on&lt;/td&gt;
      &lt;td&gt;off) and in the mods directory mpm_event.conf, mpm_prefork.conf and mpm_worker.conf. Depends on whether the apache is running as prefork or worker module, I guess. You can set MaxSpareServers and the like to lower values, and apache won’t spawn as many child processes. I know nothing about the exact behaviour, especially regarding the keepalive option.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Sun, 03 May 2015 00:00:00 +0200</pubDate>
        <link>http://www.gestos.de/2015/05/03/apache-process-spawning.html</link>
        <guid isPermaLink="true">http://www.gestos.de/2015/05/03/apache-process-spawning.html</guid>
        
        
      </item>
    
  </channel>
</rss>
